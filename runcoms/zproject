#
# Project related configurations
#

mlir-cmake() {
  if (( $# < 3 ))
  then
    echo "usage: $0 <source-dir> <target-dir> <build-type>"
    return 1
  fi

  SOURCE_DIR=$1; shift
  TARGET_DIR=$1; shift
  BUILD_TYPE=$1; shift

  if [[ "$(uname)" == "Darwin" ]]; then
    LLVM_LLD=""
  else
    LLVM_LLD="-DLLVM_ENABLE_LLD=ON"
  fi

  cmake -GNinja \
    -S ${SOURCE_DIR} -B ${TARGET_DIR} \
    -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
    -DCMAKE_C_COMPILER=$(which clang) -DCMAKE_CXX_COMPILER=$(which clang++) \
    ${LLVM_LLD} \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
    -DLLVM_ENABLE_PROJECTS="llvm;mlir" \
    -DLLVM_TARGETS_TO_BUILD="host" \
    -DMLIR_ENABLE_BINDINGS_PYTHON=ON -DPython3_EXECUTABLE="$(which python)" \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DMLIR_ENABLE_VULKAN_RUNNER=ON \
    -DMLIR_ENABLE_SPIRV_CPU_RUNNER=ON \
    -DLLVM_BUILD_EXAMPLES=ON "$@"
}

iree-cmake() {
  if (( $# < 3 ))
  then
    echo "usage: $0 <source-dir> <target-dir> <build-type>"
    return 1
  fi

  SOURCE_DIR=$1; shift
  TARGET_DIR=$1; shift
  BUILD_TYPE=$1; shift

  if [[ "$(uname)" == "Darwin" ]]; then
    IREE_LLD=""
    IREE_THIN_ARCHIVES=""
  else
    IREE_LLD="-DIREE_ENABLE_LLD=ON"
    IREE_THIN_ARCHIVES="-DIREE_ENABLE_THIN_ARCHIVES=ON"
  fi

  if [[ $(command -v ccache) ]]; then
    CCACHE_CC="-DCMAKE_C_COMPILER_LAUNCHER=ccache"
    CCACHE_CXX="-DCMAKE_CXX_COMPILER_LAUNCHER=ccache"
  else
    CCACHE_CC=""
    CCACHE_CXX=""
  fi

  if [[ $(command -v nvidia-smi) ]]; then
    CUDA_TARGET="-DIREE_TARGET_BACKEND_CUDA=ON"
    CUDA_DRIVER="-DIREE_HAL_DRIVER_CUDA=ON"
  else
    CUDA_TARGET=""
    CUDA_DRIVER=""
  fi

  if [[ $(command -v iree-import-tflite) ]]; then
    BENCHMARK=ON
  else
    BENCHMARK=OFF
  fi

  cmake -GNinja \
    -S ${SOURCE_DIR} -B ${TARGET_DIR} \
    -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
    -DCMAKE_C_COMPILER=$(which clang) -DCMAKE_CXX_COMPILER=$(which clang++) \
    ${CCACHE_CC} ${CCACHE_CXX} \
    ${IREE_LLD} \
    -DIREE_ENABLE_SPLIT_DWARF=ON ${IREE_THIN_ARCHIVES} \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
    -DIREE_BUILD_PYTHON_BINDINGS=ON -DPython3_EXECUTABLE="$(which python)" \
    -DIREE_BUILD_E2E_TEST_ARTIFACTS=${BENCHMARK} \
    -DCMAKE_INSTALL_PREFIX=${TARGET_DIR}/install \
    ${CUDA_TARGET} ${CUDA_DRIVER} "$@"
}

iree-android-cmake() {
  if (( $# < 4 ))
  then
    echo "usage: $0 <source-dir> <target-dir> <host-dir> <build-type>"
    return 1
  fi

  SOURCE_DIR=$1; shift
  TARGET_DIR=$1; shift
  HOST_DIR=$1;   shift
  BUILD_TYPE=$1; shift

  cmake -GNinja \
    -S ${SOURCE_DIR} -B ${TARGET_DIR} \
    -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
    -DCMAKE_TOOLCHAIN_FILE="${ANDROID_NDK}/build/cmake/android.toolchain.cmake" \
    -DANDROID_ABI=arm64-v8a \
    -DANDROID_PLATFORM=android-30 \
    -DIREE_HOST_BIN_DIR="${HOST_DIR}/install/bin" \
    -DPython3_EXECUTABLE="$(which python)" \
    -DIREE_BUILD_COMPILER=OFF \
    -DIREE_BUILD_TESTS=ON \
    -DIREE_BUILD_SAMPLES=OFF "$@"
}
